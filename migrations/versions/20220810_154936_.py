"""empty message

Revision ID: 426d270c59ae
Revises: dfa273d1d402
Create Date: 2022-08-10 15:49:36.701699

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '426d270c59ae'
down_revision = 'dfa273d1d402'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('follows',
    sa.Column('follower_id', sa.Integer(), nullable=True),
    sa.Column('followed_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['followed_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['follower_id'], ['users.id'], )
    )
    op.alter_column('comments', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('likes', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('likes', 'post_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint('likes_user_id_fkey', 'likes', type_='foreignkey')
    op.drop_constraint('likes_post_id_fkey', 'likes', type_='foreignkey')
    op.create_foreign_key(None, 'likes', 'posts', ['post_id'], ['id'])
    op.create_foreign_key(None, 'likes', 'users', ['user_id'], ['id'])
    op.drop_column('likes', 'id')
    op.add_column('users', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'created_at')
    op.add_column('likes', sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False))
    op.drop_constraint(None, 'likes', type_='foreignkey')
    op.drop_constraint(None, 'likes', type_='foreignkey')
    op.create_foreign_key('likes_post_id_fkey', 'likes', 'posts', ['post_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('likes_user_id_fkey', 'likes', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.alter_column('likes', 'post_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('likes', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('comments', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_table('follows')
    # ### end Alembic commands ###
